{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get(); // put(), puts things back into our regular Redux flow\n\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    passowrd\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, passowrd);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get(); // put(), puts things back into our regular Redux flow\n\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/johny/Desktop/beauty-shop/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","auth","googleProvider","createUserProfileDocument","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","signInWithEmail","payload","email","passowrd","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SACIC,mBADJ,EAEIC,mBAFJ,EAGIC,kBAHJ,EAIIC,kBAJJ,QAKO,gBALP;AAOA,SACIC,IADJ,EAEIC,cAFJ,EAGIC,yBAHJ,QAIO,+BAJP;AAMA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMJ,IAAI,CAACK,eAAL,CAAqBJ,cAArB,CAArB;AACA,UAAMK,OAAO,GAAG,MAAMZ,IAAI,CAAEQ,yBAAF,EAA6BE,IAA7B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B,CAHA,CAIA;;AACA,UAAMhB,GAAG,CACLI,mBAAmB,CAAC;AAACa,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KAAD,CADd,CAAT;AAGH,GARD,CAQE,OAAMC,KAAN,EAAa;AACX,UAAMnB,GAAG,CAACK,mBAAmB,CAACc,KAAD,CAApB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAV,CAA1B,EAA0D;AAC7D,MAAI;AACA,UAAM;AAAEX,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACgB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMT,OAAO,GAAG,MAAMZ,IAAI,CAAEQ,yBAAF,EAA6BE,IAA7B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B,CAHA,CAIA;;AACA,UAAMhB,GAAG,CACLM,kBAAkB,CAAC;AAACW,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KAAD,CADb,CAAT;AAGH,GARD,CAQE,OAAMC,KAAN,EAAa;AACX,UAAMnB,GAAG,CAACO,kBAAkB,CAACY,KAAD,CAAnB,CAAT;AACH;AACJ;AAED,OAAO,UAAUM,mBAAV,GAAgC;AACnC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,oBAAjB,EAAuCf,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUgB,kBAAV,GAA+B;AAClC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,mBAAjB,EAAsCR,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUS,SAAV,GAAsB;AACzB,QAAM5B,GAAG,CAAC,CAACC,IAAI,CAACuB,mBAAD,CAAL,EAA4BvB,IAAI,CAACyB,kBAAD,CAAhC,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects'\n\nimport UserActionTypes from './user.types'\n\nimport { \n    googleSignInSuccess, \n    googleSignInFailure, \n    emailSignInSuccess, \n    emailSignInFailure \n} from './user.actions'\n\nimport { \n    auth, \n    googleProvider, \n    createUserProfileDocument \n} from '../../firebase/firebase.utils'\n\nexport function* signInWithGoogle() {\n    try {\n        const {user} = yield auth.signInWithPopup(googleProvider)\n        const userRef = yield call (createUserProfileDocument, user)\n        const userSnapshot = yield userRef.get()\n        // put(), puts things back into our regular Redux flow\n        yield put(\n            googleSignInSuccess({id: userSnapshot.id, ...userSnapshot.data() })\n        )\n    } catch(error) {\n        yield put(googleSignInFailure(error))\n    }\n}\n\nexport function* signInWithEmail({payload: { email, passowrd }}) {\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email, passowrd)\n        const userRef = yield call (createUserProfileDocument, user)\n        const userSnapshot = yield userRef.get()\n        // put(), puts things back into our regular Redux flow\n        yield put(\n            emailSignInSuccess({id: userSnapshot.id, ...userSnapshot.data() })\n        )\n    } catch(error) {\n        yield put(emailSignInFailure(error))\n    }\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* userSagas() {\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart)])\n}"]},"metadata":{},"sourceType":"module"}